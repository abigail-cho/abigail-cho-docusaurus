"use strict";(self.webpackChunkabigail_portfolio=self.webpackChunkabigail_portfolio||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"why-i-love-chatspeak","metadata":{"permalink":"/blog/why-i-love-chatspeak","source":"@site/blog/i-love-chatspeak.md","title":"Why I love chatspeak","description":"I don\'t know if I\'m in the minority for this or if all tech writers feel this way, but my hot take is that chatspeak is the best way to communicate in the workplace and in general (lol). It\'s shorter, it\'s faster, and it\'s (usually) clearer than full-form text.","date":"2024-11-18T00:00:00.000Z","tags":[{"inline":false,"label":"personal","permalink":"/blog/tags/personal","description":"Content still related to tech writing, but more observations from my personal life."}],"readingTime":3.84,"hasTruncateMarker":true,"authors":[{"name":"Abby Cho","url":"https://github.com/abigail-cho","key":"abby","page":null}],"frontMatter":{"slug":"why-i-love-chatspeak","title":"Why I love chatspeak","authors":"abby","date":"2024-11-18T00:00:00.000Z","tags":["personal"]},"unlisted":false,"nextItem":{"title":"Learning to say \\"No, but...\\"","permalink":"/blog/learning-to-say-no-but"}},"content":"I don\'t know if I\'m in the minority for this or if all tech writers feel this way, but my hot take is that chatspeak is the best way to communicate in the workplace and in general (lol). It\'s shorter, it\'s faster, and it\'s (usually) clearer than full-form text.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## The \\"Official Writer\\" (\ud83d\udc80) effect \\r\\n\\r\\nMost of my positions so far have been remote, so most of my introductions with coworkers have been through text. Now, I understand that you always want to put your best foot forward when introducing yourself to a coworker for the first time, but so far, most of the messages people have sent me have been something like this: \\r\\n\\r\\n> Greetings Abby! It is a pleasure to meet you. I am [name], and I am a [title] here. I was wondering if you would be so kind as to share your availability for this week? I have a request for you that I would greatly appreciate your time on should the opportunity arise. Thank you!\\r\\n\\r\\nThey were well-formatted, had correct grammar and punctuation, and felt very formal. For a little while, I tried to match that tone because I assumed that\'s what made people feel more comfortable, and I didn\'t mind. However, I started to notice that the requests that I got from colleagues tended to try to continue to follow that similar tone: very formal, rather long-winded, and using business jargon that sometimes wasn\'t even used the right way. Because of this, it took a lot of back and forth to get answers to what I thought would be simple questions:\\r\\n\\r\\n1. What is the problem?\\r\\n2. What is the ask?\\r\\n\\r\\nThis was my first time working in a fully remote company that worked over Slack, so I kind of assumed that this was just how people spoke in business chats. However, I started to notice in some other public threads that the same people were very casual in other conversations. This included colleagues whom I worked with directly and I was fairly certain were quite comfortable with me. \\r\\n\\r\\nSo I started a small experiment. Instead of replying with something like \\"Hello fellow human! I am also enthused to make your acquaintance!\\", I started saying \\"hi nice to meet u too :) what\'s up?\\" \\r\\n\\r\\n## omggg that\'s so lit bruh \ud83d\udd25\ud83d\udd25 fr\\r\\n\\r\\nInexplicably, after I set the tone of the conversation, my colleagues dropped the pretense and started speaking more casually to me. And this was great&mdash;not necessarily because this meant they were more comfortable around me (although this is always nice), but because once they stopped feeling to need to use \\"proper\\" speech, **I got to the heart of the problem faster.** This was an observable pattern that I found: once these was less pressure to speak formally to me, my colleagues were able to describe what the issue was and why it mattered in:\\r\\n\\r\\n* Clearer language\\r\\n* Fewer words\\r\\n* Less time\\r\\n\\r\\nFrom a technical writer\'s point of view, that\'s hella. \\r\\n\\r\\nIt not only saved both of us a lot of minutes, but it also made my life easier because there was **less ambiguity** around the request. With complicated language, there\'s always the risk of the audience not understanding the true intent&mdash;as technical writers are more than familiar with. Pithier, casual conversations using language that was more familiar to the speaker tended to yield better results. I didn\'t have to spend more effort from asking questions like, \\"Okay, can you clarify this?\\" or \\"I still don\'t understand what you mean by that. Can you explain further?\\" Instead, both me and my colleagues came away from the conversations satisfied.\\r\\n\\r\\n## \ud83d\udcaf\ud83d\udcaf\ud83d\udcaf bet\\r\\n\\r\\nOf course, science demanded that I repeat the experiment multiple times before drawing any real conclusions from it. And I\'m happy to report that I\'ve tried this in two different companies now with at least fifty different colleagues, and I can confidently say that speaking casually still makes the asks faster and clearer. People aren\'t bogged down by the worry that I\'ll judge them (or something) for making typos, using abbreviations, or using chatspeak in the workplace. In fact, these days, I actively use it first wherever appropriate and try to encourage it wherever I can.\\r\\n\\r\\nSo, while it might not be \\"proper\\" or \\"correct\\" to say \\"lmaooo yea i get that. np i can do that for u by eow\\" in response to a request, I will say that it\'s made the job **easier**&mdash;so this \\"official writer\\" gives her official stamp of approval for Internet slang and straightforwardness in the workplace.\\r\\n\\r\\nAbby out! \u270c\ufe0f"},{"id":"learning-to-say-no-but","metadata":{"permalink":"/blog/learning-to-say-no-but","source":"@site/blog/learning-to-say-no-but.md","title":"Learning to say \\"No, but...\\"","description":"If I\'m going to be writing about anything for my first ever blog post, it might as well be about one of best lessons I\'ve learned (so far!): learning to say \\"No, but...\\" (not to be confused with its closely related precursor, \\"No\\").","date":"2024-10-20T00:00:00.000Z","tags":[{"inline":false,"label":"professional","permalink":"/blog/tags/professional","description":"Content related to my professional life"}],"readingTime":8.615,"hasTruncateMarker":true,"authors":[{"name":"Abby Cho","url":"https://github.com/abigail-cho","key":"abby","page":null}],"frontMatter":{"slug":"learning-to-say-no-but","title":"Learning to say \\"No, but...\\"","authors":"abby","date":"2024-10-20T00:00:00.000Z","tags":["professional"]},"unlisted":false,"prevItem":{"title":"Why I love chatspeak","permalink":"/blog/why-i-love-chatspeak"}},"content":"If I\'m going to be writing about anything for my **first ever blog post**, it might as well be about one of best lessons I\'ve learned (so far!): learning to say \\"No, **but**...\\" (not to be confused with its closely related precursor, \\"No\\").\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Say yes to impress!\\r\\n\\r\\nI think everyone that starts out is eager to please. They want to stun! They want to dazzle! They want to amaze! For tech writers, I think this is even more amplified because we are acutely aware that some (okay, most) people aren\'t crazy about documenting things. Documentation is often times considered an afterthought or tedious chore to be done after the flashy product release. So, we want to prove that we **are**, in fact, a useful and important function in the company. And while I think the general attitude around docs definitely has opportunity to change, I generally believe that having the drive to prove value isn\'t inherently wrong. Doing your best should be a given.\\r\\n\\r\\nBut early on, I confused \\"my best\\" with \\"more work\\". \\r\\n\\r\\nIndeed, I thought that if I wasn\'t buried in tasks day in and day out, then it meant that I had more of my best to give. That every assignment, no matter the importance or size, needed to be urgently prioritized. That every request, no matter how lofty or unattainable, had to be met with a resounding and enthusiastic \\"Yes!\\"\\r\\n\\r\\nI get exhausted just remembering it, so you can imagine how well it went at the time. Of course, that strategy didn\'t last very long, because once I started tackling the asks that I had no business accepting in the first place, I started running into serious roadblocks. And after I cleared those, I dropped into a rabbit hole of questions. And once I dug my way out of those, I found myself performing archaeological investigations trying to figure out why the heck we put a doc about \\"sushi\\" under a category about \\"sandwiches\\"&mdash;because surely there\'s a good reason for this, right? Right??\\r\\n\\r\\nAnd then regret set in, because I could tell that I was wasting my time on a task that took a lot of effort but didn\'t have a worthwhile gain. But I couldn\'t just back out of something I said I\'d do at this point, because other colleagues had deadlines and plans depending on me. So my only choice was to finish what I had and then make sure this **never** happened again.\\r\\n\\r\\n## Say no. Say no to ***everything.***\\r\\n\\r\\nOkay, not **everything** everything. I was still waking up with the intention to work. But I was notably more wary than I was before. This was also when I started my first position as a lone (and founding) technical writer at an organization, so I **really** had my guard up. Just from the first week, I could tell I\'d need to say no **a lot.** \\r\\n\\r\\nAnd to be honest, I think my philosophy about it was usually fair. I had a lot of larger efforts going to get technical writing off the ground, and I also had some tasks that I really couldn\'t say no to as well&mdash;like new product documentation, for example. And some requests I got, I actually had a good reason for saying no to&mdash;like, for example, a request to write a doc explaining why the user shouldn\'t trust some unintuitive status colors and instead use that article. The article in question would say something completely different from expectations in the product, and essentially told users that they couldn\'t trust the product to deliver a good experience. I certainly wasn\'t going to immortalize that in writing on our knowledge base, so I diagnosed that one as a product problem rather than a docs problem and promptly rejected it.\\r\\n\\r\\nThe problem with that was: I didn\'t say any of that reasoning. Or any reasoning for most of things I rejected. I just said \\"Sorry, no\\" or \\"Unfortunately, I can\'t commit to that right now\\" and was done with it. \\r\\n\\r\\nI thought I was doing the right thing: I was streamlining my workload so I could focus on the tasks that I believed would have the highest impact for the business.  But I just ended up putting blinders on myself. Rejecting people outright meant that there couldn\'t be further discussion, which meant small problems that might\'ve been low priority in isolation could\'ve been symptoms of larger problems that I had not realized (and often were). Rejection also didn\'t make the problem go away&mdash;it would just sit until someone ran into the same thing again, ask around to see why that problem was there, hear that the tech writing team (me) rejected it for some reason (none given), and then just submit it to me all over again. \\r\\n\\r\\nMost importantly, however, I realized that without explanation, peoples\' **habits** wouldn\'t change. I actually had technical writing reasons for rejecting most requests, but when I wasn\'t conveying that to others, they would just keep asking the same types of questions. And my true goal as the lone tech writer was to get **everyone** thinking about documentation best practices&mdash;because I wasn\'t able to do it alone, and that is ultimately the best way to demonstrate **value**.\\r\\n\\r\\n## Say no...but actually\\r\\n\\r\\nOne day, a colleague from product marketing approached me asking if we could put an FAQ on the docs site. I\'m personally a bit wary of articles solely as FAQs, but I wanted to hear her out and start applying my new philosophy: don\'t just reject, but change minds and provide alternate solutions. \\r\\n\\r\\nIt turned out what she wanted was an FAQ about compliance and security information for the latest integration we were releasing. This integration needed a lot of access to the user\'s system to work, and would obviously raise a lot of security concerns. However, it was clear to me that, based on the content that she already put together so far, this was almost certainly going to need to be a carefully constructed legal document rather than an informative article. Words were my thing, but legal certainly wasn\'t, and I wasn\'t comfortable having such delicate content on the knowledge base, which the legal team didn\'t interact with at the time.\\r\\n\\r\\nSo I told her \\"No\\". Cue the slight look of disappointment.\\r\\n\\r\\nThen, I said, \\"But...\\" \\r\\n\\r\\nI continued on to say that it definitely sounded like a document that **needed** to exist, but probably didn\'t belong in the knowledge base&mdash;for the reasons above. So goal number one accomplished: help others understand technical writing values, like what kind of subjects do and don\'t go in a help center.\\r\\n\\r\\nThen, I told her that I\'d worked with our legal and security teams before for another similar project in the past, and they ended up putting that content on the website alongside some of our other compliance documents. I was sure they\'d be happy to work with her on this as well. I also offered to help copyedit what she had so far, although obviously the final say on language would have to be from legal. So goal number two: provide an alternative solution.\\r\\n\\r\\nAnd, what do you know it, she was really responsive to this answer. She nodded along and said that, after thinking about it, she agreed it made the most sense to keep all the compliance docs together on the website. She also said that my offer to help was appreciated, but not necessary, since the legal team would have their own way revising this type of document. Then, with smiles, we went our separate ways. \\r\\n\\r\\nSo, to sum it up, here\'s what I achieved with the \\"No, but...\\" strategy:\\r\\n* My colleague gained new understanding on how to think about categorizing content\\r\\n* She  came away with an alternative solution that gave her a path forward rather than going back empty-handed\\r\\n* She felt acknowledged and supported that her idea was valuable even though I wasn\'t necessarily the right person to ask\\r\\n* And I ended up not having to do any work related to this anyway, which was my original goal when I was just saying \\"No\\"\\r\\n\\r\\n## Afterword\\r\\n\\r\\nNot all of my \\"No, but...\\" conversations went exactly like it did with my colleague. Not that I had bad experiences&mdash;I\'m fortunate enough to say that I\'ve gotten along with almost everyone I\'ve worked with&mdash;but I wasn\'t able to get the same feedback as I did with that one-on-one conversation. A lot of requests or one-off questions came to me through Slack, for example, and while I still stuck to my \\"No, but\\" philosophy, it was hard to tell if my explanations were landing with people.\\r\\n\\r\\nI think what really solidified that it **was** truly working was when my manager came to me one day and said, \\"So I noticed this was happening.\\" And more than that, they shared that they were having conversations with other employees about documentation, and they brought up some of the conversations they had with me and how they used it in their thought processes. They congratulated me on my new behavior, and reiterated what I already believed: that having this strategy of providing explanation after rejection helped others gain **understanding**. This makes teammates feel heard and validated with their concerns while reducing the time wasted on extraneous requests or meetings&mdash;basically, makes the business run better.\\r\\n\\r\\nI was also noting a pattern: colleagues were sending me fewer repeat requests, and I engaged in a lot more conversations about documentation practices instead. More people also started going to the right teams I routed them to rather than coming to me by default for all word-related things. \\r\\n\\r\\nAll of which is to say that I ended up spending less time denying irrelevant requests and more time focusing on actual docs tasks&mdash;and I got to teach some people about documentation too. Not that I expected them to become experts, but it was nice to share knowledge and shed some light on a field that is sometimes looked over as an afterthought at companies. And it shouldn\'t be overlooked that it also made my colleagues feel better and more comfortable about asking questions.\\r\\n\\r\\nSo, if you\'ve found yourself in a situation similar to mine and you\'ve found that \\"No\\" is not enough, then might I suggest a bit of \\"No, but\\"?"}]}}')}}]);